{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/functions.js","webpack://exports/./src/selection.js","webpack://exports/external \"sketch/dom\""],"names":["Document","require","Page","Artboard","Style","Shape","Group","Text","Rectangle","documentDom","getSelectedDocument","document","context","data","documentData","currentPage","page","selectedPage","selectedLayers","selection","textStylesContainer","layerTextStyles","stylesContainer","layerStyles","getLayer_byName","name","predicate","NSPredicate","predicateWithFormat","children","filteredArrayUsingPredicate","firstObject","getLayers_byName","layerArray","getAllShapeLayers","forEach","selectLayer","layer","getTextSharedStyle_byName","objects","getTextSharedStyle_byID","id","sharedObjectWithID","getSharedStyle_byID","getObjectBy","object","property","value","getSharedStyle_byName","addTextLayer","layerGroup","text","parent","textValue","alignment","lastLayer","setTextColor","color","setFontSize","fontSize","setLineHeight","lineHeight","setFontPostscriptName","fontFamily","frame","setX","positionX","setY","positionY","getHex_fromMSColor","immutableModelObject","hexValue","getHex_fromLayer","style","fills","luminance","red","alpha","green","blue","contrast","back","front","backLum","foreLum","Math","max","min","colorTone","minimumContrast","lightContrast","MSColor","whiteColor","darkContrast","blackColor","getColor_fromLayer","addSharedStyle_fromStyle","type","showMessage","hasTextStyle","addSharedObject","updateSharedStyle_fromLayer","sharedID","sharedObjectID","MSTextLayer","textSharedObject","isOutOfSyncWithInstance","updateToMatch","MSShapeGroup","sharedObject","isLayerExist","isSharedTextStyleExist","hasSharedStyle","getAllLayers","layerList","layers","push","containsMultipleLayers","concat","getAllTextLayers","getAllSameTypeLayers","layerType","autoTextColor","textColor","select_byExpandingSelection","select_namesake_layers","length","selectedLayer","select_namesake_and_homogeneous_layers","class"],"mappings":"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","file":"selection.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/selection.js\");\n","const Document = require('sketch/dom').Document;\nconst Page = require('sketch/dom').Page;\nconst Artboard = require('sketch/dom').Artboard;\nconst Style = require('sketch/dom').Style;\nconst Shape = require('sketch/dom').Shape;\nconst Group = require('sketch/dom').Group;\nconst Text = require('sketch/dom').Text;\nconst Rectangle = require('sketch/dom').Rectangle;\n\nconst documentDom = require('sketch/dom').getSelectedDocument();\nconst document = context.document;\nconst data = document.documentData();\nconst currentPage = document.currentPage();\nconst page = document.selectedPage;\nconst selectedLayers = document.selectedLayers();\nconst selection = context.selection;\n\nconst textStylesContainer = data.layerTextStyles();\nconst stylesContainer = data.layerStyles();\n\n\n/**\n * @export 根据图层名称获取第一个匹配到的图层\n * @param {String} name - 图层的名称\n * @returns 第一个匹配的图层\n */\nexport function getLayer_byName(name) {\n    var predicate = NSPredicate.predicateWithFormat(\"name == %@\", name);\n    return currentPage.children().filteredArrayUsingPredicate(predicate).firstObject();\n}\n\n/**\n * @export 根据图层名称获取所有匹配的图层\n * @param {String} name - 图层的名称\n * @returns {Array} __NSSingleObjectArrayI\n */\nexport function getLayers_byName(name) {\n    var predicate = NSPredicate.predicateWithFormat(\"name == %@\", name);\n    var layerArray = getAllShapeLayers(currentPage);\n    layerArray.forEach(layer =>{\n        selectLayer(layer);\n    });\n    return selection.filteredArrayUsingPredicate(predicate);\n}\n\n/**\n *\n *\n * @export 根据名称找到共享的文本样式\n * @param {String} name\n * @returns\n */\nexport function getTextSharedStyle_byName(name) {\n    var predicate = NSPredicate.predicateWithFormat(\"name == %@\", name);\n    return textStylesContainer.objects().filteredArrayUsingPredicate(predicate).firstObject();\n}\n\nexport function getTextSharedStyle_byID(id) {\n    return textStylesContainer.sharedObjectWithID(id);\n}\n\nexport function getSharedStyle_byID(id) {\n    return stylesContainer.sharedObjectWithID(id);\n}\n\n/**\n *\n *\n * @export 根据某个属性之找到某个对象\n * @param {String} object - layer, textSharedStyle, sharedStyle, layerList\n * @param {String} property - id, name\n * @param {String} value\n * @returns\n */\nexport function getObjectBy(object, property, value) {\n    var predicate;\n    switch (property) {\n        case 'id':\n            predicate = NSPredicate.predicateWithFormat(\"objectID == %@\", value);\n            break;\n        case 'name':\n            predicate = NSPredicate.predicateWithFormat(\"name == %@\", name);\n            break;\n        default:\n            break;\n    }\n    switch (object) {\n        case 'layer':\n            return currentPage.children().filteredArrayUsingPredicate(predicate).firstObject();\n        case 'layerList':\n            return currentPage.children().filteredArrayUsingPredicate(predicate);\n        case 'textSharedStyle':\n            return textStylesContainer.objects().filteredArrayUsingPredicate(predicate).firstObject();\n        case 'sharedStyle':\n            return stylesContainer.objects().filteredArrayUsingPredicate(predicate).firstObject();\n        default:\n            break;\n    }\n}\n\n/**\n *\n *\n * @export 根据名称找到共享的样式\n * @param {String} name\n * @returns\n */\nexport function getSharedStyle_byName(name) {\n    var predicate = NSPredicate.predicateWithFormat(\"name == %@\", name);\n    return stylesContainer.objects().filteredArrayUsingPredicate(predicate).firstObject();\n}\n\n/**\n * @export 添加一个新的文本图层\n * @param {Object} layerGroup - 是包含 TextLayer 的容器 MSLayerGroup，可以是 Group, Artboard, Page\n * @param {Object} text - 是文本对象\n * @param {string} text.name - 图层名称\n * @param {string} text.textValue - 文本内容设置\n * @param {string} text.alignment - 对齐方式，可以使用 Text.Alignment.left 来获得，或者直接使用字符串。可用的数值包括 left, right, center, justified, natural\n * @param {Object} text.color - MSColor\n * @param {string} text.fontFamily - 字体设置，使用 PostscriptName\n * @param {number} text.positionX - 图层的 x 坐标\n * @param {number} text.positionY - 图层的 y 坐标\n * @param {number} text.lineHeight - 文本的行高设置\n * @param {number} text.fontSize - 字号设置\n * @returns {Object} 该文本图层\n */\nexport function addTextLayer(layerGroup, text) {\n    new Text({\n        parent: layerGroup,\n        text: text.textValue,\n        alignment: text.alignment\n    });\n\n    var layer = layerGroup.lastLayer();\n    layer.name = text.name;\n    layer.setTextColor(text.color);\n    layer.setFontSize(text.fontSize);\n    layer.setLineHeight(text.lineHeight);\n    layer.setFontPostscriptName(text.fontFamily);\n    layer.frame().setX(text.positionX);\n    layer.frame().setY(text.positionY);\n\n    return layer;\n}\n\n\n/**\n * @export MSColor_转换为_HEX\n * @param {Object} color - MSColor\n * @returns {String} colorValue\n */\nexport function getHex_fromMSColor(color) {\n    return color.immutableModelObject().hexValue();\n}\n\n\n/**\n * @export 获取图层的背景色HEX值\n * @param {Object} layer - MSLayer 对象\n * @returns {String} HEX数值\n */\nexport function getHex_fromLayer(layer) {\n    return layer.style().fills()[0].color().immutableModelObject().hexValue();\n}\n\n\n// 计算颜色的明亮程度，公式来自 Material Design Web Components\n// 参考：https://github.com/material-components/material-components-web/blob/master/packages/mdc-theme/_functions.scss\n\n/**\n *\n * @export 计算亮度\n * @param {Object} color - MSColor 对象\n * @returns {Number}\n */\nexport function luminance(color) {\n    return 0.2126 * (color.red() * color.alpha() + 1) + 0.7152 * (color.green() * color.alpha() + 1) + 0.0722 * (color.blue() * color.alpha() + 1);\n}\n\n\n/**\n *\n *\n * @export 计算对比度\n * @param {Object} back - MSColor 对象，作为背景色\n * @param {Object} front - MSColor 对象，作为前景色\n * @returns {Number}\n */\nexport function contrast(back, front) {\n    const backLum = luminance(back) + 0.5;\n    const foreLum = luminance(front) + 0.5;\n    return Math.max(backLum, foreLum) / Math.min(backLum, foreLum);\n}\n\n\n/**\n *\n *\n * @export 获得亮色还是暗色\n * @param {Object} color - MSColor 对象\n * @returns\n */\nexport function colorTone(color) {\n    const minimumContrast = 4.5;\n\n    const lightContrast = contrast(color, MSColor.whiteColor());\n    const darkContrast = contrast(color, MSColor.blackColor());\n\n    if (lightContrast < minimumContrast && darkContrast > lightContrast) {\n        return \"light\";\n    } else {\n        return \"dark\";\n    }\n}\n\n\n/**\n *\n *\n * @export 获取图层背景色\n * @param {Object} layer - MSLayer\n * @returns {Object} MSColor\n */\nexport function getColor_fromLayer(layer) {\n    return layer.style().fills()[0].color();\n}\n\n\n/**\n * 将一个 Style 样式添加到 SharedStyle 当中\n *\n * @export \n * @param {Object} style - 图层样式，可以是文字样式或图形样式\n * @returns 一个共享样式\n */\nexport function addSharedStyle_fromStyle(style) {\n    if (style.type() != 3) {\n        return document.showMessage(\"需要的是 MSSharedStyle\");\n    }\n    if (style.value().hasTextStyle) {\n        textStylesContainer.addSharedObject(style);\n    } else {\n        stylesContainer.addSharedObject(style);\n    }\n}\n\n\n/**\n *\n *\n * @export 根据当前图层，同步同层的共享样式\n * @param {object} layer - 需要更新的图层\n * @returns\n */\nexport function updateSharedStyle_fromLayer(layer) {\n    const sharedID = layer.style().sharedObjectID();\n    if (layer instanceof MSTextLayer) {\n        const textSharedObject = getTextSharedStyle_byID(sharedID);\n        if (textSharedObject.isOutOfSyncWithInstance(layer)) {\n            return textSharedObject.updateToMatch(layer.style());\n        }\n    } else if (layer instanceof MSShapeGroup) {\n        const sharedObject = getSharedStyle_byID(sharedID);\n        if (sharedObject.isOutOfSyncWithInstance(layer)) {\n            sharedObject.updateToMatch(layer.style());\n        }\n    } else {\n        return document.showMessage(\"Wrong Layer.\");\n    }\n}\n\n\n/**\n *\n *\n * @export 判断改名称的图层是否存在\n * @param {String} name - 图层名称\n * @returns\n */\nexport function isLayerExist(name) {\n    if (getLayer_byName(name)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n\n/**\n *\n *\n * @export 该名称的共享文本样式是否存在\n * @param {String} name\n * @returns\n */\nexport function isSharedTextStyleExist(name) {\n    if (getTextSharedStyle_byName(name)) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n *\n *\n * @export 判断该图层是否有共享样式\n * @param {Object} layer\n * @returns\n */\nexport function hasSharedStyle(layer) {\n    if (layer.style().sharedObjectID()) {\n        return true;\n    } else {\n        return false;\n    }\n}\n\n/**\n * \n *\n * @export 获取所有的非文件夹图层， 也就是文本和图形。\n * @param {*} layerGroup\n */\nexport function getAllLayers(layerGroup) {\n    var layerList = [];\n    var layers = layerGroup.layers();\n    layers.forEach(layer => {\n        if (layer instanceof MSShapeGroup || layer instanceof MSTextLayer) {\n            layerList.push(layer);\n        } else if (layer.containsMultipleLayers()) {\n            layerList = layerList.concat(getAllLayers(layer));\n        }\n    });\n    return layerList;\n}\n\n\n/**\n *\n *\n * @export 获取图层组中所有图形图层\n * @param {Object} layerGroup - 图层组\n * @returns {Array} 包含图层组中所有图形图层的列表\n */\nexport function getAllShapeLayers(layerGroup) {\n    var layerList = [];\n    var layers = layerGroup.layers();\n    layers.forEach(layer => {\n        if (layer instanceof MSShapeGroup) {\n            layerList.push(layer);\n        } else if (layer.containsMultipleLayers()) {\n            layerList = layerList.concat(getAllShapeLayers(layer));\n        }\n    });\n    return layerList;\n}\n\n/**\n *\n *\n * @export 获取图层组中所有文本图层\n * @param {Object} layerGroup - 图层组\n * @returns {Array} 包含图层组中所有图形图层的列表\n */\nexport function getAllTextLayers(layerGroup) {\n    var layerList = [];\n    var layers = layerGroup.layers();\n    layers.forEach(layer => {\n        if (layer instanceof MSTextLayer) {\n            layerList.push(layer);\n        } else if (layer.containsMultipleLayers()) {\n            layerList = layerList.concat(getAllShapeLayers(layer));\n        }\n    });\n    return layerList;\n}\n\n/**\n *\n *\n * @export 获取图层组中所有同类型图层\n * @param {Object} layerGroup - 图层组\n * @returns {Array} 包含图层组中所有图形图层的列表\n */\nexport function getAllSameTypeLayers(layerGroup, layerType) {\n    var layerList = [];\n    var layers = layerGroup.layers();\n    layers.forEach(layer => {\n        if (layer instanceof layerType) {\n            layerList.push(layer);\n        } else if (layer.containsMultipleLayers()) {\n            layerList = layerList.concat(getAllSameTypeLayers(layer, layerType));\n        }\n    });\n    return layerList;\n}\n\n\n\n/**\n * 根据图层颜色自动设定文本的颜色，只有白色和黑色\n *\n * @export\n * @param {Object} layer\n * @returns MSColor\n */\nexport function autoTextColor(layer) {\n    var textColor = MSColor.blackColor();\n    if (colorTone(getColor_fromLayer(layer)) == 'dark') {\n        textColor = MSColor.whiteColor();\n    }\n    return textColor;\n}\n\n\n/**\n * 选中给定的图层\n *\n * @export\n * @param {*} layer\n */\nexport function selectLayer(layer) {\n    layer.select_byExpandingSelection(true, true);\n}","import { selectLayer, getAllLayers, getAllSameTypeLayers } from \"./functions\";\n\n\n\nexport function select_namesake_layers(context) {\n    const document = context.document;\n    const selection = context.selection;\n\n    if (selection.length < 1) {\n        document.showMessage(\"至少选一个图层\");\n        return false;\n    }\n    \n    const layerList = getAllLayers(document.currentPage());\n    selection.forEach(selectedLayer => {\n        layerList.forEach(layer => {\n            if ((layer.name() + \"\") == (selectedLayer.name() + \"\")) {\n                selectLayer(layer);\n            }\n        });\n    });\n}\n\nexport function select_namesake_and_homogeneous_layers(context) {\n    const document = context.document;\n    const selection = context.selection;\n\n    if (selection.length < 1) {\n        document.showMessage(\"至少选一个图层\");\n        return false;\n    }\n    const layerList = getAllSameTypeLayers(document.currentPage(), selectedLayer.class());\n    selection.forEach(selectedLayer => {\n        layerList.forEach(layer => {\n            if ((layer.name() + \"\") == (selectedLayer.name() + \"\")) {\n                selectLayer(layer);\n            }\n        });\n    });\n}","module.exports = require(\"sketch/dom\");"],"sourceRoot":""}